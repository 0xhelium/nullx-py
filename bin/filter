#!/usr/bin/env python

import argparse
import sys
import re
from nullx.utils import printb

def get_version():
    version = "Nullx 1.0\n"
    version += "Nullx filter 1.0"
    return version

parser = argparse.ArgumentParser(description="Nullx Stream Filtering Software", formatter_class=argparse.RawTextHelpFormatter)
parser.add_argument("regex", metavar="R", type=str,
                    help="regex used for filtering")
parser.add_argument("-p", "--plain", dest="plain", action="store_true", default=False,
                    help="specify that the input is just plain text")
parser.add_argument("-f", "--file", dest="file", action="store", default=None,
                    help="the file to process")
parser.add_argument("-e", "--encoding", dest="encoding", action="store", default="utf-8",
                    help="the encoding of the input (default: 'utf-8')")
parser.add_argument("--version", action="version", version=get_version(),
                    help="show the version")
args = parser.parse_args()

data = None
if args.file is None:
    data = sys.stdin.read()
else:
    with open(args.file, "r" if args.plain else "rb") as f:
        data = f.read()

args.regex = re.sub(r"(?<!\\)%", r".*?", args.regex)
if args.plain:
    pattern = re.compile(args.regex)
else:
    pattern = re.compile(args.regex.encode(args.encoding))

results = pattern.findall(data)
for r in results:
    if args.plain:
        print(r)
    else:
        printb(r)
